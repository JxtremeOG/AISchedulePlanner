{
    "ECEC 201": {
        "shortName": "ECEC 201",
        "fullName": "Advanced Programming for Engineers",
        "courseCredits": "3.0",
        "courseDesc": "This course will cover advanced usage and understanding of programming concepts using the C programming language within a Linux development environment. C will serve as a foundation for future embedded firmware and system level software authorship as well as a means to better understand the underlying program execution model and memory organization used by modern computing systems.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ENGR 131 [Min Grade D] or ENGR 132 [Min Grade D] or ECE 203 [Min Grade D] or CS 171 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 204": {
        "shortName": "ECEC 204",
        "fullName": "Design with Microcontrollers",
        "courseCredits": "3.0",
        "courseDesc": "Offers hands-on experience in the design of controllers that incorporate microcontrollers as an embedded component in a larger system. The microcomputer topics to be studied will include architecture, software, programming and interfaces.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "(ECE 200 [Min Grade D] or CS 270 [Min Grade D]) and (ECEC 201 [Min Grade D] or ECEC 301 [Min Grade D])",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 302": {
        "shortName": "ECEC 302",
        "fullName": "Digital Systems Projects",
        "courseCredits": "3.0",
        "courseDesc": "Studies the theory of digital system design and the topdown design methodology using hardware description language and software tools for simulation, synthesis and Field Programmable Gate Array (FPGA) implementation.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "(ECE 105 [Min Grade D] or CS 172 [Min Grade D] or ECE 203 [Min Grade D]) and (ECE 200 [Min Grade D] or CS 270 [Min Grade D])",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 352": {
        "shortName": "ECEC 352",
        "fullName": "Secure Computer Systems: Design Concepts",
        "courseCredits": "4.0",
        "courseDesc": "Covers concepts of secure computation, including economics vs. faults, errors, and hidden messages; mathematical foundations of secure computing; design issues in fault-tolerant computing; and testability and cryptography.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECEC 302 [Min Grade D] and MATH 221 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 353": {
        "shortName": "ECEC 353",
        "fullName": "Systems Programming",
        "courseCredits": "3.0",
        "courseDesc": "This course introduces computer systems, including interaction of hardware and software through the operating system, from the programmer's perspective. Three fundamental abstractions are emphasized: processes, virtual memory, and files. These abstractions provide programmers a common interface to a wide variety of hardware devices. Topics covered include linking, system level I/O, concurrent programming, and network programming.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "CS 265 [Min Grade D] or ECEC 201 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 355": {
        "shortName": "ECEC 355",
        "fullName": "Computer Organization & Architecture",
        "courseCredits": "3.0",
        "courseDesc": "This course will cover the principles of designing microprocessors using solid engineering fundamentals and quantitative cost/performance trade-offs. Topics will cover computer performance from hardware and software perspective, instruction set architectures focusing on RISC-V, arithmetic for computers, processor datapath and control, single cycle microarchitectures, and pipeline architectures. The course will introduce issues in pipeline design and techniques to solve these issues.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECEC 201 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 356": {
        "shortName": "ECEC 356",
        "fullName": "Embedded Systems",
        "courseCredits": "4.0",
        "courseDesc": "Lectures will cover theoretical concepts of embedded and cyber\u2010physical systems including discrete and continuous dynamics, hybrid systems, state machines, concurrent computation, embedded systems architecture and scheduling. Lab involves programming embedded applications for the decentralized software services architecture using C# and the Microsoft Robotics Software Development Kit (SDK) together with the hardware image processing and tracking capabilities of the Kinect sensor.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECEC 204 [Min Grade D] or ECEC 304 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 357": {
        "shortName": "ECEC 357",
        "fullName": "Introduction to Computer Networks",
        "courseCredits": "3.0",
        "courseDesc": "History of the Internet; introduction to packet switching, circuit switching and virtual circuit switching; statistical multiplexing; protocol layering; metrics of network performance including bandwidth, delay and loss; medium access protocols and Ethernet; routing algorithms; end-to-end issues; flow and congestion control; an overview of application layer protocols.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECE 105 [Min Grade D] or ECEC 201 [Min Grade D] or CS 171 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 402": {
        "shortName": "ECEC 402",
        "fullName": "Digital System Projects Embedded Design",
        "courseCredits": "3.0",
        "courseDesc": "A project-based course on real-time applications using Field Programmable Gate Array (FPGA), embedded processors (software), IP (Intellectual Property) cores library and custom IP cores.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECEC 302 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 411": {
        "shortName": "ECEC 411",
        "fullName": "Computer Hardware",
        "courseCredits": "3.0",
        "courseDesc": "Covers the design and performance of computer hardware devices, including direct memory access, priority arbitration, double buffering, and bus standards. Fall.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECEC 355 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 412": {
        "shortName": "ECEC 412",
        "fullName": "Modern Processor Design",
        "courseCredits": "3.0",
        "courseDesc": "This course introduces modern processor design in a systematic manner. It discusses dynamically scheduled superscalar techniques including advanced branch prediction, performance analysis of static and dynamic branch prediction techniques, cache design principles, cache replacement policies, techniques to exploit instruction-level parallelism via out-of-order execution, and techniques to tolerate long memory latencies via speculative and run-ahead executions. The course provides a comprehensive coverage of modern practices in processor design.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECEC 355 [Min Grade D] or CS 281 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 413": {
        "shortName": "ECEC 413",
        "fullName": "Introduction to Parallel Computer Architecture",
        "courseCredits": "3.0",
        "courseDesc": "This course provides an introduction to the fundamental principles and engineering trade-offs involved in designing modern parallel computers (multi-processors). Topics covered include, but are not limited to, shared-memory and message-passing programming, cache-coherence, synchronization, scalable distributed memory multi-processors, and interconnection techniques.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECEC 355 [Min Grade D] or CS 281 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 414": {
        "shortName": "ECEC 414",
        "fullName": "High Performance Computing",
        "courseCredits": "3.0",
        "courseDesc": "This course is an introduction to high performance computing, including both concepts and applications. Course contents will include discussions of different types of high performance computer architectures (multi-core/multi-threaded processors, parallel computers, etc.), the design, implementation, optimization and analysis of efficient algorithms for uni-processors, multi-threaded processors, and parallel computers, and high performance programming.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECEC 355 [Min Grade D] or (CS 281 [Min Grade D] and CS 282 [Min Grade D])",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 421": {
        "shortName": "ECEC 421",
        "fullName": "Introduction to Operating Systems I",
        "courseCredits": "3.0",
        "courseDesc": "Covers basic concepts of computer operating systems, including multiprocessing and multiprogramming systems, lock operations, synchronization, and file structures.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECEC 353 [Min Grade C] or CS 283 [Min Grade C]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 422": {
        "shortName": "ECEC 422",
        "fullName": "Introduction to Operating Systems II",
        "courseCredits": "3.0",
        "courseDesc": "Further develops the topics ofECEC\u00a0421. Spring.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECEC 421 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 431": {
        "shortName": "ECEC 431",
        "fullName": "Introduction to Computer Networks",
        "courseCredits": "3.0",
        "courseDesc": "Covers topics in computer and telecommunications network design.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECE 200 [Min Grade D] and CS 260 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 432": {
        "shortName": "ECEC 432",
        "fullName": "Internet Architecture and Protocols",
        "courseCredits": "3.0",
        "courseDesc": "Covers architecture, protocols, and services of the Internet with an analytical approach focused on design principles; Internet architecture and topology; architecture of web and mail servers; router architectures; routing protocols; multicasting; multimedia over IP and associated protocols; Quality-of-Service issues in the Internet.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECEC 357 [Min Grade D] or CS 472 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 433": {
        "shortName": "ECEC 433",
        "fullName": "Network Programming",
        "courseCredits": "3.0",
        "courseDesc": "Covers application layer protocol and how applications use the transport layer; principles and practice of network programming; the client-server model; concurrent processing; introduction to sockets and related functions client and server software design with examples; principles, issues and challenges in e-mail and web application protocols; security protocols; and network life system concepts.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECEC 357 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 441": {
        "shortName": "ECEC 441",
        "fullName": "Robotic Computer Interface & Control I",
        "courseCredits": "3.0",
        "courseDesc": "Covers fundamentals of robotics systems, including mechanics, actuators, sensors, kinematics, and inverse kinematics. Fall.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECES 356 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 442": {
        "shortName": "ECEC 442",
        "fullName": "Robotic Computer Interface & Control II",
        "courseCredits": "3.0",
        "courseDesc": "Covers robot dynamics, Lagrangian and Newton Euler methods, linear control of robots, path planning, and computer implementation. Winter.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECEC 441 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 443": {
        "shortName": "ECEC 443",
        "fullName": "Robotic Computer Interface & Control III",
        "courseCredits": "3.0",
        "courseDesc": "Covers robot-computer interface methods, including redundancy, optimal control, robustness, nonlinear control, adaptive control, and multiprocessor control. Spring.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECEC 442 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 451": {
        "shortName": "ECEC 451",
        "fullName": "Computer Arithmetic",
        "courseCredits": "3.0",
        "courseDesc": "This course provides an introduction to number representations used in computer arithmetic, issues of complexity in arithmetic operations, fixed point arithmetic, floating point arithmetic, and residue number systems.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECE 200 [Min Grade D] and ECEC 355 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 453": {
        "shortName": "ECEC 453",
        "fullName": "Image Processing Architecture",
        "courseCredits": "3.0",
        "courseDesc": "This course covers applications of computing techniques and hardware in image (still and video) processing. Methods of compression (lossless, lossy), video compression, JPEG standards, MPEG standards, processing requirements, and implementations for multimedia.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECE 200 [Min Grade D] and ECES 301 [Min Grade D] and ECES 303 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 455": {
        "shortName": "ECEC 455",
        "fullName": "Intelligent System Architectures",
        "courseCredits": "3.0",
        "courseDesc": "This course outlines the principles of designing the architectures for intelligent systems. Methods of knowledge representation are compared for a variety of engineering problems. Methods of sensing and behavior generation are demonstrated for applications in large engineering and information systems including autonomous robots. Principles of goal-oriented computers are discussed, and modules of intelligent systems architectures are described. Theoretical fundamentals and practical techniques for learning are also covered.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "MATH 221 [Min Grade D] and ECEC 355 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 457": {
        "shortName": "ECEC 457",
        "fullName": "Security in Computing",
        "courseCredits": "3.0",
        "courseDesc": "The course introduces ideas from Cryptography and Fault Tolerant Computing. Cryptography studies how to artificially create distortions that being interwoven with computations mask them from eavesdropping. Fault Tolerance studies techniques of suppressing effects of natural noises that operate in computation channels. The course deals with both some introductory issues in Public Key Cryptography and some important aspects of designing Fault Tolerant Systems.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECEC 355 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 459": {
        "shortName": "ECEC 459",
        "fullName": "Testing of Hardware",
        "courseCredits": "3.0",
        "courseDesc": "Testing has become the largest expense item in the semiconductor industry. There is rapidly being developed new techniques in testing, design for test and built-in self-test because no existing set of techniques can satisfy the existing and future needs. The course reviews, in a unified way, important issues in testing and diagnosis of hardware. Together with the \"Security in Computing\" course, it brings a design engineer student to the state of the art level in the field.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECEC 355 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 471": {
        "shortName": "ECEC 471",
        "fullName": "Introduction to VLSI Design",
        "courseCredits": "3.0",
        "courseDesc": "This is an introductory course where systematic understanding, design and analysis of digital VLSI integrated circuits will be covered. The course will begin with a review of CMOS transistor operation and semiconductor processes. Logic design with CMOS transistor and circuit families will be described. Specifically, layout, design rules, and circuit simulation will be addressed. Performance metrics will be analyzed in design and simulation.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECE 200 [Min Grade D] or CS 270 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 472": {
        "shortName": "ECEC 472",
        "fullName": "Custom VLSI Design & Analysis I",
        "courseCredits": "3.0",
        "courseDesc": "This is the first of two courses offered on Custom Very Large Scale Integration (VLSI) circuit and systems design and analysis. An understanding of VLSI integrated circuits is achieved through cir- cuit design and analysis. This course focuses exclusively on high performance digital CMOS VLSI circuit and systems design, although some topics on mixed-signal circuits are also addressed.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECEC 471 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 473": {
        "shortName": "ECEC 473",
        "fullName": "Custom VLSI Design & Analysis II",
        "courseCredits": "3.0",
        "courseDesc": "This is the second of two courses offered on Custom VLSI circuit and systems design and analysis. An understanding of VLSI integrated circuits is achieved through circuit design and analysis. This course focuses exclusively on high performance digital CMOS VLSI circuit and systems design, although some topics on mixed-signal circuits are also addressed. The primary focus is on-chip power management. Power generation techniques are discussed and different power converters are analyzed. Power distribution networks are presented with a focus on the different distribution architectures and output impedance characteristics. Techniques to reduce power supply noise are also provided. A secondary focus examines substrate noise in mixed-signal systems and techniques to reduce substrate noise.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECEC 471 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 474": {
        "shortName": "ECEC 474",
        "fullName": "ASIC Design I",
        "courseCredits": "3.0",
        "courseDesc": "This course will focus exclusively on digital CMOS Application Specific Integrated Circuit (ASIC) systems design and automation. The ASIC physical design flow, including logic synthesis, floorplanning, placement, clock tree synthesis, routing and verification will be presented. These back-end physical design flow steps will also be covered through hands-on practice using industrial VLSI CAD tools. Contemporary design practices will be reviewed and presented in experiments.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECE 200 [Min Grade D] and (ECEC 355 [Min Grade D] or CS 281 [Min Grade D])",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 475": {
        "shortName": "ECEC 475",
        "fullName": "ASIC Design II",
        "courseCredits": "3.0",
        "courseDesc": "Design and analysis of Application Specific Integrated Circuits (ASICs) will be covered from a systems design perspective. System timing, arithmetic building block and memory block design processes will be presented. Design tasks in a quarter-long, small-complexity processor design project will cover the back-end of the IC design flow range, from RTL synthesis to timing and power analysis. Projects will be performed in a hierarchical group, similar to an industrial setting, with other graduate and undergraduate students.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECEC 474 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 476": {
        "shortName": "ECEC 476",
        "fullName": "Hardware Security & Trust",
        "courseCredits": "3.0",
        "courseDesc": "The course covers a broad range of current topics in the areas of security and protection of modern integrated circuits. The covered material includes cryptographic processor and processing overhead, physical and invasive attacks, side-channel attacks, physically unclonable functions, hardware-based true random number generators, watermarking of intellectual property, FPGA security, passive and active metering for prevention of piracy, access control, and emerging threats to current and next- generation technologies.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECEC 471 [Min Grade D] or ECEC 571 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 486": {
        "shortName": "ECEC 486",
        "fullName": "Cell and Tissue Image Analysis",
        "courseCredits": "3.0",
        "courseDesc": "Theory of supervised and unsupervised pattern recognition techniques, with practical programming projects.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECE 361 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 487": {
        "shortName": "ECEC 487",
        "fullName": "Pattern Recognition",
        "courseCredits": "3.0",
        "courseDesc": "Theory of supervised and unsupervised statistical pattern recognition, presented through practical programming techniques.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Not repeatable for credit",
        "prereqs": "ECE 361 [Min Grade D]",
        "coreqs": null,
        "restrictions": null
    },
    "ECEC 497": {
        "shortName": "ECEC 497",
        "fullName": "Research In Computer Engineering",
        "courseCredits": "0.5-12.0",
        "courseDesc": "Computer engineering students only. Requires independent research in a field approved by the faculty.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Can be repeated multiple times for credit",
        "prereqs": null,
        "coreqs": null,
        "restrictions": null
    },
    "ECEC I199": {
        "shortName": "ECEC I199",
        "fullName": "Independent Study in Electrical & Computer Engineering",
        "courseCredits": "0.0-12.0",
        "courseDesc": "Self-directed within the area of study requiring intermittent consultation with a designated instructor.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Can be repeated multiple times for credit",
        "prereqs": null,
        "coreqs": null,
        "restrictions": null
    },
    "ECEC I299": {
        "shortName": "ECEC I299",
        "fullName": "Independent Study in Electrical & Computer Engineering",
        "courseCredits": "0.0-12.0",
        "courseDesc": "Self-directed within the area of study requiring intermittent consultation with a designated instructor.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Can be repeated multiple times for credit",
        "prereqs": null,
        "coreqs": null,
        "restrictions": null
    },
    "ECEC I399": {
        "shortName": "ECEC I399",
        "fullName": "Independent Study in Electrical & Computer Engineering",
        "courseCredits": "0.0-12.0",
        "courseDesc": "Self-directed within the area of study requiring intermittent consultation with a designated instructor.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Can be repeated multiple times for credit",
        "prereqs": null,
        "coreqs": null,
        "restrictions": null
    },
    "ECEC I499": {
        "shortName": "ECEC I499",
        "fullName": "Independent Study in Electrical & Computer Engineering",
        "courseCredits": "0.0-12.0",
        "courseDesc": "Self-directed within the area of study requiring intermittent consultation with a designated instructor.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Can be repeated multiple times for credit",
        "prereqs": null,
        "coreqs": null,
        "restrictions": null
    },
    "ECEC T180": {
        "shortName": "ECEC T180",
        "fullName": "Special Topics in Electrical & Computer Engineering",
        "courseCredits": "0.0-12.0",
        "courseDesc": "Topics decided upon by faculty will vary within the area of study.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Can be repeated multiple times for credit",
        "prereqs": null,
        "coreqs": null,
        "restrictions": null
    },
    "ECEC T280": {
        "shortName": "ECEC T280",
        "fullName": "Special Topics in Electrical & Computer Engineering",
        "courseCredits": "0.0-12.0",
        "courseDesc": "Topics decided upon by faculty will vary within the area of study.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Can be repeated multiple times for credit",
        "prereqs": null,
        "coreqs": null,
        "restrictions": null
    },
    "ECEC T380": {
        "shortName": "ECEC T380",
        "fullName": "Special Topics in ECEC",
        "courseCredits": "0.0-12.0",
        "courseDesc": "Topics decided upon by faculty will vary within the area of study.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Can be repeated multiple times for credit",
        "prereqs": null,
        "coreqs": null,
        "restrictions": null
    },
    "ECEC T480": {
        "shortName": "ECEC T480",
        "fullName": "Special Topics in ECEC",
        "courseCredits": "0.0-12.0",
        "courseDesc": "Topics decided upon by faculty will vary within the area of study.",
        "courseDepartment": "College of Engineering",
        "repeatStatus": "Can be repeated multiple times for credit",
        "prereqs": null,
        "coreqs": null,
        "restrictions": null
    }
}